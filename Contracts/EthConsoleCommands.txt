// Dev chain
var platformAddress = "0x1e2f51e97f2772dafe59d345bbe48c32a7d2b46b";
var clientAddress = "0x8298eca41e01f8c285e17e2546b8ceb0d24eda18";
var contractorAddress = "0x1d9de997cf7bedfb709881657df5a7b9cc5689fe";

var password = "password";

// transfer some ethers too client & contractor for gas
personal.unlockAccount(platformAddress, "password");
eth.sendTransaction({ from: platformAddress, to: clientAddress, value: web3.toWei(1, "ether")});

var abi = [{"constant":true,"inputs":[],"name":"getContractorAddress","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"pay","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"contractorAmount","type":"uint256"}],"name":"disputeSettlement","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"validate","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getAllAddresses","outputs":[{"name":"","type":"address"},{"name":"","type":"address"},{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"fund","outputs":[],"payable":true,"type":"function"},{"constant":false,"inputs":[{"name":"_contractor","type":"address"}],"name":"hire","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"arbiter","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"inputs":[{"name":"_arbiter","type":"address"}],"payable":false,"type":"constructor"},{"payable":false,"type":"fallback"}]
var bytecode = "0x6060604052341561000f57600080fd5b604051602080610853833981016040528080519060200190919050505b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505b610794806100bf6000396000f30060606040523615610097576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a48a152146100aa5780631b9265b8146100ff57806341c0e1b51461011457806347d8664a146101295780636901f6681461014c5780639516a10414610179578063b60d428814610234578063d9d6bd861461023e578063fe25e00a14610277575b34156100a257600080fd5b5b600080fd5b005b34156100b557600080fd5b6100bd6102cc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561010a57600080fd5b6101126102f7565b005b341561011f57600080fd5b6101276103c2565b005b341561013457600080fd5b61014a60048080359060200190919050506104ca565b005b341561015757600080fd5b61015f6105af565b604051808215151515815260200191505060405180910390f35b341561018457600080fd5b61018c6105b9565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390f35b61023c610632565b005b341561024957600080fd5b610275600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506106a1565b005b341561028257600080fd5b61028a610742565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b90565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561035257600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f1935050505015156103b657600080fd5b60006004819055505b5b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561041e57600080fd5b6000600454111561048d576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050151561048c57600080fd5b5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b5b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561052657600080fd5b60008111156105a257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561059157600080fd5b806004600082825403925050819055505b6105aa6103c2565b5b5b50565b6000600190505b90565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250925092505b909192565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561068d57600080fd5b346004600082825401925050819055505b5b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106fc57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820502603facecf3146997d321d816b447db7fc968223228726d2dced825cb4ee530029";
var gas = eth.estimateGas({ data: bytecode} ) * 2;

// deploying the contract using the client address
personal.unlockAccount(clientAddress, "password");
var contract = eth.contract(abi);
var instance = contract.new(platformAddress, { 
   from:clientAddress,
   data:bytecode,
   value: web3.toWei(0, "finney")
   gas:gas}, function(err, contractInstance){
    if(!err) {
       if(!contractInstance.address) {
           console.log("Tx Hash: " + contractInstance.transactionHash) // The hash of the transaction, which deploys the contract
       } else {
           console.log("Address: " + contractInstance.address) // the contract address
       }
    }
	else {
		console.log(err);
	}
});

// hiring the contractor
instance.hire(contractorAddress, { from: clientAddress });
// checking the contractor
instance.getContractorAddress();

// getting all addresseses
var (a, b, c) = instance.getAllAddresses();

// funding the contract
instance.fund({ from: clientAddress, value: web3.toWei(1, "finney")  });

// checking for the balance in contract
eth.getBalance(instance.address);

// paying the contractor and checking contractor balance
instance.pay({ from: clientAddress });
eth.getBalance(contractorAddress);
